{
  "openapi": "3.1.0",
  "info": {
    "title": "HealthyHub API",
    "description": "API documentation for Healthy Hub Server",
    "version": "2.0.0",
    "license": {
      "name": "HealthyHub by Sweet-Pies",
      "url": "https://katanes.github.io/HealthyHub/"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://healthyhubserver.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Recommended Food",
      "description": "Recommended food endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "security": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              },
              "example": {
                "name": "Sweet Pie",
                "email": "sweetpie@goit.ua",
                "password": "qwe123456",
                "goal": "1",
                "gender": "male",
                "age": 36,
                "height": 172,
                "weight": 90,
                "activity": 3
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Successful registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupResponse"
              },
              "example": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1OGNmYTNmMzg2YzhlMWYzM2M3MTcxNiIsImlhdCI6MTcwMzczNzkxOSwiZXhwIjoxNzAzOTk3MTE5fQ.roGTip4cIZQN0qFVIT4hOsadPkYk9odC99ZiG_HYhUU",
                "user": {
                  "name": "Sweet Pie",
                  "email": "sweetpie@goit.ua",
                  "goal": "1",
                  "gender": "male",
                  "age": 36,
                  "height": 172,
                  "weight": 90,
                  "activity": 3,
                  "avatarURL": "//www.gravatar.com/avatar/71fa10732d0099a8c2c897cba9e7797c"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request (invalid request body)"
        },
        "409": {
          "description": "Conflict (Email already in use)"
        }
      }
    },
    "api/auth/verify/{token}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with token",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid token)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend email for user's verification",
        "requestBody": {
          "description": "Email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              },
              "example": {
                "email": "sweetpie@goit.ua"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during email verification"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],

        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              },
              "example": {
                "email": "sweetpie@goit.ua",
                "password": "qwe123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1OGNmYTNmMzg2YzhlMWYzM2M3MTcxNiIsImlhdCI6MTcwMzczODUwMywiZXhwIjoxNzAzOTk3NzAzfQ.0T18F7SAMZKRtkWC8ku1oeQJh8bJh78XalI4yQHoPYw",
                  "user": {
                    "name": "Sweet Pie",
                    "email": "sweetpie@goit.ua",
                    "goal": "1",
                    "gender": "male",
                    "age": 36,
                    "height": 172,
                    "weight": 90,
                    "activity": 3,
                    "avatarURL": "//www.gravatar.com/avatar/71fa10732d0099a8c2c897cba9e7797c"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot password",
        "requestBody": {
          "description": "Email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                },
                "example": {
                  "message": "Your new password was send to your email!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful user's logout"
                    }
                  }
                },
                "example": {
                  "message": "You have logout successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                },
                "example": {
                  "_id": "658cfa3f386c8e1f33c71716",
                  "name": "Sweet Pie",
                  "email": "sweetpie@goit.ua",
                  "password": "$2b$10$31mhHur3UcATUvm7kqaXLO//GdlVpGZYLpRJ0VFuIuH.cYLVdXEyC",
                  "goal": "1",
                  "gender": "male",
                  "age": 36,
                  "height": 172,
                  "weight": 90,
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1OGNmYTNmMzg2YzhlMWYzM2M3MTcxNiIsImlhdCI6MTcwMzczODUwMywiZXhwIjoxNzAzOTk3NzAzfQ.0T18F7SAMZKRtkWC8ku1oeQJh8bJh78XalI4yQHoPYw",
                  "activity": 3,
                  "BMR": 2000,
                  "rateWater": 1500,
                  "protein": 120,
                  "fat": 40,
                  "carbs": 270,
                  "avatarURL": "//www.gravatar.com/avatar/71fa10732d0099a8c2c897cba9e7797c",
                  "verify": true,
                  "verificationToken": "aee17c3e-b8ab-41a2-ad91-006e44791a30",
                  "confirmationOfVerification": 0,
                  "createdAt": "2023-12-28T04:31:59.109Z",
                  "updatedAt": "2023-12-28T04:41:43.538Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "Update user's information",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updated user's information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              },
              "example": {
                "goal": "1",
                "gender": "male",
                "age": 46,
                "height": 172,
                "weight": 95,
                "activity": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                },
                "example": {
                  "goal": "1",
                  "gender": "male",
                  "age": 46,
                  "height": 172,
                  "weight": 95,
                  "activity": 5
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or ID)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "Update user's goal",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's goal object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              },
              "example": {
                "goal": "3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                },
                "example": {
                  "goal": "3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/weight": {
      "post": {
        "tags": ["User"],
        "summary": "Update user's weight",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's weight object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeightRequest"
              },
              "example": {
                "weight": 90
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeightResponse"
                },
                "example": {
                  "weight": {
                    "weight": 110
                  },
                  "owner": "658cfa3f386c8e1f33c71716",
                  "name": "Sweet Pie"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/food-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Add food intake for a meal type",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Food intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodRequest"
              },
              "example": {
                "foodType": "breakfast",
                "foodName": "soup",
                "carbohydrate": 25,
                "protein": 20,
                "fat": 30,
                "calories": 300
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoodResponse"
                },
                "example": {
                  "_id": "658d019e13724e751f461587",
                  "foodType": "breakfast",
                  "foodName": "soup",
                  "carbohydrate": 25,
                  "protein": 20,
                  "fat": 30,
                  "calories": 300,
                  "date": "28.12.2023"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user's food intake",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "status": "success",
            "code": 200,
            "message": "Food consumption for the current date deleted successfully"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Food consumption for the current date not found"
          },
          "500": {
            "description": "Some problem with deleting food consumption"
          }
        }
      }
    },
    "/api/user/food-intake/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update food intake for a specific product",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Food intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodRequest"
              },
              "example": {
                "foodType": "breakfast",
                "foodName": "burger",
                "carbohydrate": 125,
                "protein": 60,
                "fat": 50,
                "calories": 400
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoodUpdateResponse"
                },
                "example": {
                  "_id": "658d1c0b5f78af03ef76c69e",
                  "foodType": "breakfast",
                  "foodName": "burger",
                  "carbohydrate": 125,
                  "protein": 60,
                  "fat": 50,
                  "calories": 400
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/water-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Add water intake for a user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRequest"
              },
              "example": {
                "water": 100,
                "date": "27.12.2023"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water intake today",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterTodayResponse"
                },
                "example": {
                  "status": "success",
                  "code": 200,
                  "data": {
                    "date": "28.12.2023",
                    "water": 200
                  }
                }
              }
            }
          },
          "201": {
            "description": "Water intake added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterResponse"
                },
                "example": {
                  "status": "success",
                  "code": 201,
                  "data": {
                    "date": "28.12.2023",
                    "water": 100
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user's water intake",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "status": "success",
            "code": 200,
            "message": "Water consumption for the current date deleted successfully"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Water consumption for the current date not found"
          },
          "500": {
            "description": "Some problem with deleting water consumption"
          }
        }
      }
    },
    "/api/user/statistics": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's statistics",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          },
          {
            "in": "query",
            "name": "period",
            "required": true,
            "type": "string",
            "description": "Period for stats",
            "schema": {
              "type": "string",
              "enum": ["today", "month", "year"],
              "example": "month"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics"
                },
                "example": {
                  "today": {
                    "water": [],
                    "weight": [
                      {
                        "name": "Sweet Pie",
                        "list": [],
                        "createdAt": "2023-12-28T04:55:20.756Z"
                      }
                    ],
                    "calories": []
                  },
                  "month": {
                    "water": [],
                    "weight": [
                      {
                        "_id": "28",
                        "amount": 0
                      }
                    ],
                    "calories": []
                  },
                  "year": {
                    "water": [],
                    "weight": [
                      {
                        "_id": "2023-12",
                        "amount": 0,
                        "count": 1
                      }
                    ],
                    "calories": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended Food"],
        "summary": "Get food recommendations",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer Token"
          }
        ],
        "security": [{ "Bearer": [] }],
        "description": "Retrieve a list of recommended food items.",
        "responses": {
          "200": {
            "description": "Successful request. Returns a list of recommended food items.",
            "content": {
              "application/json": {
                "example": {
                  "nutrition": {
                    "carbohydrates": 14,
                    "protein": 0.3,
                    "fat": 0.2
                  },
                  "_id": "65870488d330513c3b11a6aa",
                  "name": "Apples",
                  "amount": "100 g",
                  "img": "https://ftp.goit.study/img/you_health/Apples.png",
                  "calories": 52
                },

                "schema": {
                  "$ref": "#/components/schemas/RecommendedFood"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "title": "SignupRequest",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Sweet Pie"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwe123456"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "1",
            "enum": ["1", "2", "3"]
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "enum": ["male", "female"]
          },
          "age": {
            "type": "number",
            "description": "User's age"
          },
          "weight": {
            "type": "number",
            "description": "User's weight"
          },
          "height": {
            "type": "number",
            "description": "User's height"
          },
          "activity": {
            "type": "number",
            "enum": [1, 2, 3, 4, 5],
            "description": "User's activity level"
          },
          "BMR": {
            "type": "number",
            "description": "User's BMR"
          },
          "rateWater": {
            "type": "number",
            "description": "User's rate water"
          },
          "protein": {
            "type": "number",
            "description": "User's protein"
          },
          "fat": {
            "type": "number",
            "description": "User's fat"
          },
          "carbs": {
            "type": "number",
            "description": "User's carbs"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "title": "SignupResponse",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Sweet Pie"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "enum": ["1", "2", "3"]
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"]
              },
              "age": {
                "type": "number",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "activity": {
                "type": "number",
                "description": "User's activity level"
              },
              "avatarURL": {
                "type": "string",
                "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
              }
            }
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "title": "VerifyRequest",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          }
        }
      },
      "VerifyResponse": {
        "type": "object",
        "title": "VerifyResponse",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message about successful confirmation of email"
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Sweet Pie"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "enum": ["1", "2", "3"]
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"]
              },
              "age": {
                "type": "number",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "activity": {
                "type": "number",
                "description": "User's activity level",
                "enum": ["1", "2", "3", "4", "5"]
              },
              "avatarURL": {
                "type": "string",
                "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
              }
            }
          }
        }
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Your new password was send to your email!"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password(hash)"
          },
          "goal": {
            "type": "string",
            "enum": ["1", "2", "3"],
            "description": "User's goal"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User's gender"
          },
          "age": {
            "type": "integer",
            "description": "User's age"
          },
          "height": {
            "type": "number",
            "description": "User's height"
          },
          "weight": {
            "type": "number",
            "description": "User's weight"
          },
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "activity": {
            "type": "number",
            "enum": ["1", "2", "3", "4", "5"],
            "description": "User's activity level"
          },
          "BMR": {
            "type": "number",
            "description": "User's BMR"
          },
          "rateWater": {
            "type": "number",
            "description": "User's rate water"
          },
          "protein": {
            "type": "number",
            "description": "User's protein"
          },
          "fat": {
            "type": "number",
            "description": "User's fat"
          },
          "carbs": {
            "type": "number",
            "description": "User's carbs"
          },
          "avatarUrl": {
            "type": "string",
            "description": "URL to user's avatar"
          },
          "verify": {
            "type": "boolean",
            "description": "User's verify email"
          },
          "verificationToken": {
            "type": "string",
            "description": "User's verificationToken"
          },
          "confirmationOfVerification": {
            "type": "number",
            "description": "User's confirmationOfVerification"
          },
          "createdAt": {
            "type": "string",
            "description": "User's create date"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's update date"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "description": "Data for updating information about a user.",
        "properties": {
          "required": ["age", "height", "weight"],
          "properties": {
            "goal": {
              "type": "string",
              "description": "The user's goal."
            },
            "gender": {
              "type": "string",
              "description": "The user's gender."
            },
            "age": {
              "type": "integer",
              "description": "The user's age."
            },
            "height": {
              "type": "number",
              "description": "The user's height in centimeters."
            },
            "weight": {
              "type": "number",
              "description": "The user's weight in kilograms."
            },
            "activity": {
              "type": "string",
              "description": "The user's activity level."
            }
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "description": "Data for updating information about a user.",
        "properties": {
          "goal": {
            "type": "string",
            "description": "The user's goal."
          },
          "gender": {
            "type": "string",
            "description": "The user's gender."
          },
          "age": {
            "type": "integer",
            "description": "The user's age."
          },
          "height": {
            "type": "number",
            "description": "The user's height in centimeters."
          },
          "weight": {
            "type": "number",
            "description": "The user's weight in kilograms."
          },
          "activity": {
            "type": "string",
            "description": "The user's activity level."
          }
        }
      },
      "Goal": {
        "type": "object",
        "properties": {
          "goal": {
            "type": "string",
            "description": "Updating information about goal",
            "enum": ["1", "2", "3"],
            "required": true
          }
        }
      },
      "WeightRequest": {
        "type": "object",
        "properties": {
          "description": "Data for updating information about weight.",
          "properties": {
            "weight": {
              "type": "number",
              "description": "Value of weight",
              "required": true
            }
          }
        }
      },
      "WeightResponse": {
        "type": "object",
        "properties": {
          "Response": {
            "type": "object",
            "properties": {
              "weight": {
                "type": "number",
                "description": "The value of the weight."
              },
              "_id": {
                "type": "string",
                "description": "The date of the weight."
              },
              "date": {
                "type": "string",
                "description": "The date of the weight."
              }
            }
          }
        }
      },
      "FoodRequest": {
        "type": "object",
        "description": "Data for creating information about food intake.",
        "properties": {
          "foodType": {
            "type": "string",
            "enum": ["breakfast", "lunch", "dinner", "snack"],
            "description": "Type of food",
            "required": true
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food",
            "required": true
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content",
            "required": true
          },
          "protein": {
            "type": "number",
            "description": "Protein content",
            "required": true
          },
          "fat": {
            "type": "number",
            "description": "Fat content",
            "required": true
          },
          "calories": {
            "type": "number",
            "description": "Calories content",
            "required": true
          }
        }
      },
      "FoodResponse": {
        "type": "object",
        "description": "Data for creating information about food intake.",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Type of food"
          },
          "foodType": {
            "type": "string",
            "enum": ["breakfast", "lunch", "dinner", "snack"],
            "description": "Type of food",
            "required": true
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food",
            "required": true
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content",
            "required": true
          },
          "protein": {
            "type": "number",
            "description": "Protein content",
            "required": true
          },
          "fat": {
            "type": "number",
            "description": "Fat content",
            "required": true
          },
          "calories": {
            "type": "number",
            "description": "Calories content",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "Date"
          }
        }
      },
      "FoodUpdateResponse": {
        "type": "object",
        "description": "Data for creating information about food intake.",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Type of food"
          },
          "foodType": {
            "type": "string",
            "enum": ["Breakfast", "Lunch", "Dinner", "Snack"],
            "description": "Type of food"
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food"
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content"
          },
          "protein": {
            "type": "number",
            "description": "Protein content",
            "required": true
          },
          "fat": {
            "type": "number",
            "description": "Fat content"
          },
          "calories": {
            "type": "number",
            "description": "Calories content"
          }
        }
      },

      "WaterRequest": {
        "type": "object",
        "description": "Data for updating information about water intake.",
        "properties": {
          "water": {
            "type": "number",
            "description": "Value of water",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The date of the water intake."
          }
        }
      },
      "WaterTodayResponse": {
        "type": "object",
        "description": "Data for updating information about water intake.",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "example": "27.12.2023"
              },
              "water": {
                "type": "number",
                "example": 550
              }
            }
          }
        }
      },
      "WaterResponse": {
        "type": "object",
        "description": "Data for updating information about water intake.",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "example": "27.12.2023"
              },
              "water": {
                "type": "number",
                "example": 100
              }
            }
          }
        }
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "water": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The current id."
              },
              "amount": {
                "type": "number",
                "description": "The value of the water intake."
              }
            }
          },
          "weight": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The current id."
              },
              "amount": {
                "type": "number",
                "description": "The value of the water intake."
              }
            }
          },
          "calories": {
            "type": "number",
            "description": "The value of the calories."
          }
        }
      },
      "RecommendedFood": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the food"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the food"
          },
          "img": {
            "type": "string",
            "description": "Image of the food"
          },
          "calories": {
            "type": "number",
            "description": "Calories of the food"
          },
          "nutrition": {
            "type": "object",
            "properties": {
              "carbohydrates": {
                "type": "number",
                "description": "Carbonohidrates of the food"
              },
              "protein": {
                "type": "number",
                "description": "Protein of the food"
              },
              "fat": {
                "type": "number",
                "description": "Fat of the food"
              }
            }
          }
        }
      }
    }
  }
}
