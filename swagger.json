{
  "openapi": "3.0.1",
  "info": {
    "version": "0.7.6.1",
    "title": "HealthyHub API",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "HealthyHub by Sweet-Pies",
      "url": "https://katanes.github.io/HealthyHub/"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://healthyhubserver.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Recommended Food",
      "description": "Recommended food endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Sweet Pie"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email",
                    "example": "sweetpie@goit.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "password123"
                  },
                  "goal": {
                    "type": "string",
                    "description": "User's goal",
                    "example": "1",
                    "enum": ["1", "2", "3"]
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["male", "female"]
                  },
                  "age": {
                    "type": "number",
                    "description": "User's age"
                  },
                  "height": {
                    "type": "number",
                    "description": "User's height"
                  },
                  "weight": {
                    "type": "number",
                    "description": "User's weight"
                  },
                  "activity": {
                    "type": "number",
                    "enum": [1, 2, 3, 4, 5]
                  },
                  "BMR": {
                    "type": "number",
                    "description": "User's BMR"
                  },
                  "rateWater": {
                    "type": "number",
                    "description": "User's rate water"
                  },
                  "protein": {
                    "type": "number",
                    "description": "User's protein"
                  },
                  "fat": {
                    "type": "number",
                    "description": "User's fat"
                  },
                  "carbs": {
                    "type": "number",
                    "description": "User's carbs"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar URL",
                    "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
                  }
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "token": {
                      "type": "string",
                      "description": "Authentication token for the registered user",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "sweetpie@goit.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "Sweet Pie"
                        },
                        "goal": {
                          "type": "string",
                          "example": "1"
                        },
                        "gender": {
                          "type": "string",
                          "example": "male"
                        },
                        "age": {
                          "type": "number",
                          "example": 30
                        },
                        "height": {
                          "type": "number",
                          "example": 175
                        },
                        "weight": {
                          "type": "number",
                          "example": 75
                        },
                        "activity": {
                          "type": "number",
                          "example": "2"
                        },
                        "avatarURL": {
                          "type": "string",
                          "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "api/auth/verify/{token}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful"
          },
          "400": {
            "description": "Bad request (invalid token)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check the presence of an email in the database",
        "parameters": [],
        "requestBody": {
          "description": "Request to check an email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailCheckResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],

        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful logout"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot password",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "Update user's information",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "requestBody": {
          "description": "Updated user's information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's information updated successfully"
          },
          "400": {
            "description": "Bad request (invalid request body or ID)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "Update user's goal",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User's goal object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goal": {
                    "type": "string",
                    "description": "User's new goal",
                    "example": "1"
                  }
                },
                "required": ["goal"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "goal": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/weight": {
      "post": {
        "tags": ["User"],
        "summary": "Update user's weight",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User's weight object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "number",
                    "description": "User's new weight",
                    "example": 67
                  }
                },
                "required": ["weight"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "example": "25.12.2023"
                        },
                        "weight": {
                          "type": "number",
                          "example": 67
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/water-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Add water intake for a user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Water intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water intake added successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user's water intake",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption for the current date deleted successfully"
          },
          "404": {
            "description": "Water consumption for the current date not found"
          },
          "500": {
            "description": "Some problem with deleting water consumption"
          }
        }
      }
    },
    "/api/user/food-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Add food intake for a meal type",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Food intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "foodType": {
                    "type": "string",
                    "description": "Type of the food ('breakfast', 'snack', 'dinner', 'lunch')"
                  },
                  "foodName": {
                    "type": "string",
                    "description": "Name of the food"
                  },
                  "carbohydrates": {
                    "type": "number",
                    "description": "Carbohydrate content"
                  },
                  "protein": {
                    "type": "number",
                    "description": "Protein content"
                  },
                  "fat": {
                    "type": "number",
                    "description": "Fat content"
                  },
                  "calories": {
                    "type": "number",
                    "description": "Calories content"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "foodType": {
                      "type": "string"
                    },
                    "foodName": {
                      "type": "string"
                    },
                    "carbohydrate": {
                      "type": "number"
                    },
                    "protein": {
                      "type": "number"
                    },
                    "fat": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user's food intake",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date of food intake",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Food consumption for the current date deleted successfully"
          },
          "404": {
            "description": "Food consumption for the current date not found"
          },
          "500": {
            "description": "Some problem with deleting food consumption"
          }
        }
      }
    },
    "/api/user/food-intake/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update food intake for a specific product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the food product to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Food intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "foodType": {
                    "type": "string",
                    "description": "Type of the food ('breakfast', 'snack', 'dinner', 'lunch')"
                  },
                  "foodName": {
                    "type": "string",
                    "description": "Name of the food"
                  },
                  "carbohydrates": {
                    "type": "number",
                    "description": "Carbohydrate content"
                  },
                  "protein": {
                    "type": "number",
                    "description": "Protein content"
                  },
                  "fat": {
                    "type": "number",
                    "description": "Fat content"
                  },
                  "calories": {
                    "type": "number",
                    "description": "Calories content"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "foodType": {
                      "type": "string"
                    },
                    "foodName": {
                      "type": "string"
                    },
                    "carbohydrate": {
                      "type": "number"
                    },
                    "protein": {
                      "type": "number"
                    },
                    "fat": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/daily-goal-calories": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's daily goal calories",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 1700
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/user/statistics": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's statistics",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "water": {
                          "type": "object",
                          "properties": {
                            "lastMonth": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2023-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 1500
                                  }
                                }
                              }
                            },
                            "lastYear": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2022-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 1600
                                  }
                                }
                              }
                            }
                          }
                        },
                        "weight": {
                          "type": "object",
                          "properties": {
                            "lastMonth": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2023-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 70
                                  }
                                }
                              }
                            },
                            "lastYear": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2022-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 75
                                  }
                                }
                              }
                            }
                          }
                        },
                        "calories": {
                          "type": "object",
                          "properties": {
                            "lastMonth": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2023-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 2000
                                  }
                                }
                              }
                            },
                            "lastYear": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "example": "2022-09-01"
                                  },
                                  "value": {
                                    "type": "number",
                                    "example": 2100
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended Food"],
        "summary": "Get food recommendations",
        "description": "Retrieve a list of recommended food items.",
        "responses": {
          "200": {
            "description": "Successful request. Returns a list of recommended food items.",
            "content": {
              "application/json": {
                "example": {
                  "name": "Apples",
                  "amount": "100 g",
                  "img": "https://ftp.goit.study/img/you_health/Apples.png",
                  "calories": 52,
                  "nutrition": {
                    "carbohydrates": 14,
                    "protein": 0.3,
                    "fat": 0.2
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error. Unable to retrieve food recommendations."
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Sweet Pie"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Lose Fat",
            "enum": ["1", "2", "3"]
          },
          "age": {
            "type": "number",
            "description": "User's age"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "enum": ["male", "female"]
          },
          "weight": {
            "type": "number",
            "description": "User's weight"
          },
          "height": {
            "type": "number",
            "description": "User's height"
          },
          "activity": {
            "type": "number",
            "description": "User's activity level"
          },
          "BMR": {
            "type": "number",
            "description": "User's BMR"
          },
          "rateWater": {
            "type": "number",
            "description": "User's rate water"
          },
          "protein": {
            "type": "number",
            "description": "User's protein"
          },
          "fat": {
            "type": "number",
            "description": "User's fat"
          },
          "carbs": {
            "type": "number",
            "description": "User's carbs"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Sweet Pie"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "enum": ["1", "2", "3"]
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"]
              },
              "age": {
                "type": "number",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "activity": {
                "type": "number",
                "description": "User's activity level"
              },
              "avatarURL": {
                "type": "string",
                "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
              }
            }
          }
        }
      },
      "SigninRequest": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": ["email", "password"]
      },
      "SigninResponse": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Sweet Pie"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "enum": ["1", "2", "3"]
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"]
              },
              "age": {
                "type": "number",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "activity": {
                "type": "number",
                "description": "User's activity level"
              },
              "avatarURL": {
                "type": "string",
                "example": "//www.gravatar.com/avatar/308ddee7715dfc790fbc7a04b303e1ca"
              }
            }
          }
        },
        "required": ["token", "user"]
      },
      "WaterIntakeRequest": {
        "type": "object",
        "properties": {
          "water": {
            "type": "number",
            "description": "Value of water"
          }
        },
        "description": "Data for updating information about water intake."
      },
      "WaterIntakeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response (e.g., 'success')."
          },
          "data": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "The date of the water intake."
              },
              "water": {
                "type": "number",
                "description": "The value of the water intake."
              }
            }
          }
        }
      },
      "WeightRequest": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "description": "Value of weight"
          }
        },
        "description": "Data for updating information about weight."
      },
      "WeightResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response (e.g., 'success')."
          },
          "data": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "The date of the weight."
              },
              "weight": {
                "type": "number",
                "description": "The value of the weight."
              }
            }
          }
        }
      },
      "StatisticsRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the statistics"
          }
        },
        "description": "Data for updating information about statistics."
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response (e.g., 'success')."
          },
          "data": {
            "type": "object",
            "properties": {
              "today": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "water": {
                      "type": "number",
                      "description": "The value of the water intake."
                    },
                    "weight": {
                      "type": "number",
                      "description": "The value of the weight."
                    },
                    "calories": {
                      "type": "number",
                      "description": "The value of the calories."
                    }
                  }
                }
              },
              "lastMonth": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "water": {
                      "type": "number",
                      "description": "The value of the water intake."
                    },
                    "weight": {
                      "type": "number",
                      "description": "The value of the weight."
                    },
                    "calories": {
                      "type": "number",
                      "description": "The value of the calories."
                    }
                  }
                }
              },
              "lastYear": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "water": {
                      "type": "number",
                      "description": "The value of the water intake."
                    },
                    "weight": {
                      "type": "number",
                      "description": "The value of the weight."
                    },
                    "calories": {
                      "type": "number",
                      "description": "The value of the calories."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserGoalRequest": {
        "type": "object",
        "properties": {
          "goal": {
            "type": "string",
            "description": "Value of goal",
            "example": "2",
            "enum": ["1", "2", "3"]
          }
        },
        "description": "Data for updating information about goal."
      },
      "UserGoalResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response (e.g., 'success')."
          },
          "goal": {
            "type": "string",
            "description": "The value of the goal.",
            "example": "2",
            "enum": ["1", "2", "3"]
          }
        }
      },
      "DailyGoalRequest": {
        "type": "object",
        "properties": {
          "goal": {
            "type": "number",
            "description": "Value of daily goal"
          }
        },
        "description": "Data for updating information about daily goal."
      },
      "DailyGoalResponse": {
        "type": "object",
        "properties": {
          "goal": {
            "type": "number",
            "description": "The value of the daily goal."
          }
        }
      },
      "FoodIntakeRequest": {
        "type": "object",
        "properties": {
          "foodType": {
            "type": "string",
            "description": "Type of food"
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food"
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content"
          },
          "protein": {
            "type": "number",
            "description": "Protein content"
          },
          "fat": {
            "type": "number",
            "description": "Fat content"
          },
          "calories": {
            "type": "number",
            "description": "Calories content"
          }
        },
        "description": "Data for updating information about food intake."
      },
      "FoodIntakeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Type of food"
          },
          "foodType": {
            "type": "string",
            "description": "Type of food"
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food"
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content"
          },
          "protein": {
            "type": "number",
            "description": "Protein content"
          },
          "fat": {
            "type": "number",
            "description": "Fat content"
          },
          "calories": {
            "type": "number",
            "description": "Calories content"
          },
          "date": {
            "type": "string",
            "description": "Date"
          }
        }
      },
      "FoodUpdateRequest": {
        "type": "object",
        "properties": {
          "foodType": {
            "type": "string",
            "description": "Type of food"
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food"
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content"
          },
          "protein": {
            "type": "number",
            "description": "Protein content"
          },
          "fat": {
            "type": "number",
            "description": "Fat content"
          },
          "calories": {
            "type": "number",
            "description": "Calories content"
          }
        }
      },
      "FoodUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Type of food"
          },
          "foodType": {
            "type": "string",
            "description": "Type of food"
          },
          "foodName": {
            "type": "string",
            "description": "Name of the food"
          },
          "carbohydrate": {
            "type": "number",
            "description": "Carbonohidrates content"
          },
          "protein": {
            "type": "number",
            "description": "Protein content"
          },
          "fat": {
            "type": "number",
            "description": "Fat content"
          },
          "calories": {
            "type": "number",
            "description": "Calories content"
          }
        }
      },
      "EmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          }
        }
      },
      "EmailCheckRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "description": "Send a new password to the user's email if it exists in the database."
      },
      "EmailCheckResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message indicating whether the email exists in the database or not."
          }
        },
        "description": "Response indicating if the email exists in the database."
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "description": "The user's age."
          },
          "height": {
            "type": "number",
            "description": "The user's height in centimeters."
          },
          "weight": {
            "type": "number",
            "description": "The user's weight in kilograms."
          },
          "activity": {
            "type": "string",
            "description": "The user's activity level."
          },
          "gender": {
            "type": "string",
            "description": "The user's gender."
          },
          "goal": {
            "type": "string",
            "description": "The user's goal."
          }
        },
        "description": "Data for updating information about a user."
      },
      "UpdateUserInfoResponse": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "description": "The user's age."
          },
          "height": {
            "type": "number",
            "description": "The user's height in centimeters."
          },
          "weight": {
            "type": "number",
            "description": "The user's weight in kilograms."
          },
          "activity": {
            "type": "string",
            "description": "The user's activity level."
          },
          "gender": {
            "type": "string",
            "description": "The user's gender."
          },
          "goal": {
            "type": "string",
            "description": "The user's goal."
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "goal": {
                "type": "string",
                "description": "User's goal"
              },
              "age": {
                "type": "integer",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "avatarUrl": {
                "type": "string",
                "description": "URL to user's avatar"
              },
              "gender": {
                "type": "string",
                "description": "User's gender"
              },
              "activity": {
                "type": "string",
                "description": "User's activity level"
              }
            }
          }
        },
        "FoodIntakeUpdateRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the food product"
            },
            "carbohydrates": {
              "type": "number",
              "description": "Amount of carbohydrates"
            },
            "protein": {
              "type": "number",
              "description": "Amount of protein"
            },
            "fat": {
              "type": "number",
              "description": "Amount of fat"
            }
          },
          "description": "Data for updating information about food intake."
        },
        "FoodIntakeRequest": {
          "type": "object",
          "properties": {
            "breakfast": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "lunch": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "snack": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "dinner": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "description": "Request to add food intake information for a user."
        },
        "FoodIntakeResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "Status code"
            },
            "status": {
              "type": "string",
              "description": "Status message"
            }
          },
          "description": "Response after successfully adding food intake information for a user."
        },
        "SigninRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "SigninResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "Status code"
            },
            "status": {
              "type": "string",
              "description": "Status message"
            },
            "user": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name"
                },
                "goal": {
                  "type": "string",
                  "description": "User's goal"
                },
                "age": {
                  "type": "integer",
                  "description": "User's age"
                },
                "height": {
                  "type": "number",
                  "description": "User's height"
                },
                "weight": {
                  "type": "number",
                  "description": "User's weight"
                },
                "avatarUrl": {
                  "type": "string",
                  "description": "URL to user's avatar"
                },
                "gender": {
                  "type": "string",
                  "description": "User's gender"
                },
                "activity": {
                  "type": "string",
                  "description": "User's activity level"
                }
              }
            },
            "token": {
              "type": "string",
              "description": "Access token"
            }
          }
        }
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message indicating whether the password reset email was sent successfully or not."
          }
        },
        "description": "Response indicating if the password reset email was sent."
      },
      "SignoutRequest": {
        "type": "object",
        "required": ["userId"],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id"
          }
        }
      },
      "SignoutResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          }
        }
      }
    }
  }
}
